syntax = "proto3";

option go_package = "rpc";

package rpc;

message RegInfo {
    int64 userId = 1;
    string token = 2;
    string serialNo = 3;
}

message RegisterReq {
    int64 userId = 1;
    string token = 2;
    string addr = 3;
    string server = 4;
    string serialNo = 5;
}

message RegisterResp {
    int64 deviceId = 1;
}

message Session {
    int64 id = 1;
    string name = 2;
    SessionType type = 3;
    int64 owner = 4;
}

enum SessionType {
    SESSION_UNKNOWN = 0;
    SESSION_PERSON = 1;
    SESSION_GROUP = 2;
}

message CreateSessionReq {
    string name = 1;
    int64 creater = 2;
    repeated int64 userIds = 3;
    SessionType type = 4;
}

message SessionResp {
    Session session = 1;
    repeated User members = 2;
}

message JoinSessionReq {
    int64 userId = 1;
    int64 sessionId = 2;
}

message QuitSessionReq {
    int64 userId = 1;
    int64 sessionId = 2;
}

message User {
    int64 id = 1;
    string name = 2;
    string token = 3;
}

message WithdrawMessageReq {
    int64 senderId = 1;
    int64 messageId = 2;
    int64 sessionId = 3;
}

message RenameSessionReq {
    int64 sessionId = 1;
    int64 userId = 2;
    string name = 3;
}

//1. 不传seq时按服务端自己保存的最后序列号往后查询
//2. seq为int64  获取单条
//3. seq有,用in获取
//4. seq有>按范围获取
message GetMessageReq {
    int64 sessionId = 1;
    string condition = 2;
}

message SyncMessageReq {
    int64 deviceId = 1;
}

message OfflineReq {
    int64 userId = 1;
    int64 deviceId = 2;
}