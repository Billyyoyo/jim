// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pack.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PackType int32

const (
	PackType_PT_UNKNOWN      PackType = 0
	PackType_PT_AUTH         PackType = 1
	PackType_PT_MSG          PackType = 2
	PackType_PT_PING         PackType = 3
	PackType_PT_PONG         PackType = 4
	PackType_PT_ACTION       PackType = 5
	PackType_PT_NOTIFICATION PackType = 6
	PackType_PT_ACK          PackType = 7
)

var PackType_name = map[int32]string{
	0: "PT_UNKNOWN",
	1: "PT_AUTH",
	2: "PT_MSG",
	3: "PT_PING",
	4: "PT_PONG",
	5: "PT_ACTION",
	6: "PT_NOTIFICATION",
	7: "PT_ACK",
}

var PackType_value = map[string]int32{
	"PT_UNKNOWN":      0,
	"PT_AUTH":         1,
	"PT_MSG":          2,
	"PT_PING":         3,
	"PT_PONG":         4,
	"PT_ACTION":       5,
	"PT_NOTIFICATION": 6,
	"PT_ACK":          7,
}

func (x PackType) String() string {
	return proto.EnumName(PackType_name, int32(x))
}

func (PackType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3827fe073a5f7620, []int{0}
}

// 服务端接收数据
type Input struct {
	Type                 PackType `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.PackType" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_3827fe073a5f7620, []int{0}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetType() PackType {
	if m != nil {
		return m.Type
	}
	return PackType_PT_UNKNOWN
}

func (m *Input) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 服务端发送数据
type Output struct {
	Type                 PackType `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.PackType" json:"type,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Info                 string   `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_3827fe073a5f7620, []int{1}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetType() PackType {
	if m != nil {
		return m.Type
	}
	return PackType_PT_UNKNOWN
}

func (m *Output) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Output) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *Output) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("rpc.PackType", PackType_name, PackType_value)
	proto.RegisterType((*Input)(nil), "rpc.Input")
	proto.RegisterType((*Output)(nil), "rpc.Output")
}

func init() { proto.RegisterFile("pack.proto", fileDescriptor_3827fe073a5f7620) }

var fileDescriptor_3827fe073a5f7620 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x14, 0xc4, 0xdd, 0xe6, 0x4f, 0xed, 0xd3, 0xd6, 0xe5, 0x79, 0xc9, 0x31, 0xf6, 0x14, 0x3c, 0xe4,
	0xa0, 0x77, 0x21, 0x06, 0x8c, 0x4b, 0x71, 0x77, 0x89, 0x5b, 0x04, 0x2f, 0x21, 0x6e, 0xa3, 0x48,
	0xa1, 0xbb, 0x84, 0xed, 0xa1, 0x07, 0xbf, 0xbb, 0x64, 0x69, 0xf4, 0xda, 0xdb, 0xbc, 0x19, 0xde,
	0x6f, 0x60, 0x00, 0x6c, 0xab, 0xb7, 0xb9, 0xed, 0x8d, 0x33, 0x18, 0xf4, 0x56, 0x2f, 0x1f, 0x20,
	0x62, 0x3b, 0xbb, 0x77, 0x78, 0x03, 0xa1, 0x3b, 0xd8, 0x2e, 0x21, 0x29, 0xc9, 0x16, 0x77, 0xf3,
	0xbc, 0xb7, 0x3a, 0x97, 0xad, 0xde, 0xaa, 0x83, 0xed, 0x6a, 0x1f, 0x21, 0x42, 0xb8, 0x69, 0x5d,
	0x9b, 0x4c, 0x52, 0x92, 0x5d, 0xd6, 0x5e, 0x2f, 0xbf, 0x20, 0x16, 0x7b, 0x77, 0x3a, 0x40, 0x9b,
	0x4d, 0xe7, 0x01, 0x51, 0xed, 0xf5, 0xe0, 0x7d, 0xef, 0x3e, 0x4d, 0x12, 0xa4, 0x24, 0x9b, 0xd5,
	0x5e, 0xff, 0x15, 0x85, 0xff, 0x45, 0xb7, 0x3f, 0x70, 0x3e, 0xd2, 0x70, 0x01, 0x20, 0x55, 0xb3,
	0xe6, 0x2b, 0x2e, 0xde, 0x38, 0x3d, 0xc3, 0x0b, 0x98, 0x4a, 0xd5, 0x14, 0x6b, 0xf5, 0x4c, 0x09,
	0x02, 0xc4, 0x52, 0x35, 0x2f, 0xaf, 0x15, 0x9d, 0x1c, 0x03, 0xc9, 0x78, 0x45, 0x83, 0xf1, 0x10,
	0xbc, 0xa2, 0x21, 0xce, 0x61, 0x36, 0xbc, 0x94, 0x8a, 0x09, 0x4e, 0x23, 0xbc, 0x86, 0x2b, 0xa9,
	0x1a, 0x2e, 0x14, 0x7b, 0x62, 0x65, 0xe1, 0xcd, 0xf8, 0x48, 0x2a, 0xca, 0x15, 0x9d, 0x3e, 0x46,
	0xef, 0xc3, 0x5c, 0x1f, 0xb1, 0x9f, 0xee, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x80, 0x0f, 0xae,
	0x16, 0x48, 0x01, 0x00, 0x00,
}
